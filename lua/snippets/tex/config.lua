local config = {}

--------------------------- settings ----------------------------
config.automath   = false
config.autoscript = false

--------------------------- non-math ----------------------------

-- an environment snippet is defined as a table in the following array
--      environment   (string)  : LaTeX name of environment               (required)
--      trigger       (string)  : trigger for snippet                     (required)
--      description   (string)  : description of snippet                  (optional => autogenerated)
--      options       (string)  : follows \begin{environment}             (optional => empty)
--      content       (table)   : default body content                    (optional => {'    <>'})
--      auto          (boolean) : automatically expand w/o <Tab> press    (optional => false)
--      mathmode      (boolean) : snippet is defined in math mode         (optional => false )
--      line          (integer) : 0 (line begin), 1 (anywhere), 2 (break) (optional => 0)
--      label         (integer) : include label generated from nth i-node (optional => 0)
--      priority      (integer) : snippet priority                        (optional => 100)
--      snippets      (table)   : snippets defined for this env only      (optional => empty)
--          trigger   (string)  : trigger for expansion                   (required)
--          expansion (string)  : expanded version of snippet             (required)
--          auto      (boolean) : automatically expand w/o <Tab> press    (optional => false)
-- nodes are auto-generated: the first node captures any stored visual input, and the rest are insert nodes

config.environments = {
    ------------------------- theorem-style -------------------------
    {
        environment = 'definition',
        trigger     = 'def',
        options     = '[<>]',
        label       = 1,
    },
    {
        environment = 'theorem',
        trigger     = 'thm',
        options     = '[<>]',
        label       = 1,
    },
    {
        environment = 'proposition',
        trigger     = 'prop',
        options     = '[<>]',
        label       = 1,
    },
    {
        environment = 'lemma',
        trigger     = 'lem',
        options     = '[<>]',
        label       = 1,
    },
    {
        environment = 'corollary',
        trigger     = 'cor',
        options     = '[<>]',
        label       = 1,
    },
    {
        environment = 'conjecture',
        trigger     = 'conj',
        options     = '[<>]',
        label       = 1,
    },
    {
        environment = 'example',
        trigger     = 'exam',
        options     = '[<>]',
        label       = 1,
    },
    {
        environment = 'problem',
        trigger     = 'prob',
        options     = '[<>]',
        label       = 1,
    },
    {
        environment = 'solution',
        trigger     = 'sol',
        options     = '[<>]',
        label       = 1,
    },

    -------------------------- basic-style --------------------------
    {
        environment = 'proof',
        trigger     = 'prf',
    },
    {
        environment = 'center',
        trigger     = 'ctr',
    },
    {
        environment = 'equation*',
        description = 'Equation',
        trigger     = 'mk',
        auto        = true,
        line        = 2,
    },
    {
        environment = 'equation*',
        description = 'Equation',
        trigger     = 'mk',
        auto        = true,
        line        = 2,
    },
    {
        environment = 'equation',
        description = 'Numbered Equation',
        trigger     = 'refeq',
        options     = '\\label{eq:<>}',
        line        = 2,
    },
    {
        environment = 'align*',
        trigger     = 'ali',
    },

    ------------------------ enumerate-style ------------------------
    {
        environment = 'itemize',
        trigger     = 'itm',
        description = 'Unordered List',
        options     = '',
        content     = { '    \\item <>' },
        snippets    = {
            trigger   = '    ii ',
            expansion = '\\item ',
            auto      = true,
        },
    },
    {
        environment = 'enumerate',
        trigger     = 'enm',
        description = 'Numbered List',
        options     = '',
        content     = { '    \\item ' },
        snippets    = {
            trigger   = '    ii ',
            expansion = '\\item ',
            auto      = true,
        },
    },
    {
        environment = 'enumerate',
        trigger     = 'aenm',
        description = 'Alphabetical List',
        options     = '[label=(\\alph*)]',
        content     = { '    \\item <>' },
        snippets    = {
            trigger   = '    ii ',
            expansion = '\\item ',
            auto      = true,
        },
    },
    {
        environment = 'enumerate',
        trigger     = 'renm',
        description = 'Roman-Numbered List',
        options     = '[label=(\\roman*)]',
        content     = { '    \\item <>' },
        snippets    = {
            trigger   = '    ii ',
            expansion = '\\item ',
            auto      = true,
        },
    },

    ----------------------------- other -----------------------------
    {
        environment = 'lstlisting',
        trigger     = 'lst',
        description = 'Code Listing',
        options     = '[language = <>, caption = <>]',
        label       = 2,
    },
    {
        environment = 'figure',
        trigger     = 'fig',
        description = 'Centered Figure',
        options     = '[H<>]',
        content     = {
            '    \\caption{<>}',
            '    \\centering',
            '    \\includegraphics[width=<>\\textwidth]{<>}'
        },
        label       = 2,
    },
    {
        environment = 'wrapfigure',
        trigger     = 'wfig',
        description = 'Wrapped Figure',
        options     = '{<>}{<>\\textwidth}',
        content     = {
            '    \\caption{<>}',
            '    \\centering',
            '    \\includegraphics[width=<>\\textwidth]{<>}'
        },
        label       = 3,
        priority    = 101,
    },
    {
        environment = 'table',
        trigger     = 'tabl',
        description = 'Table Environment',
        options     = '[H<>]',
        content     = {
            '    \\caption{<>}',
            '    \\centering',
            '    tab<>x<>'
        },
        label       = 2,
    },
}

-- a command snippet is defined as a table in the following array
--     expanded    (string)  : LaTeX expression                     (required)
--     trigger     (string)  : trigger for snippet                  (required)
--     description (string)  : description of snippet               (optional => autogenerated)
--     mathmode    (boolean) : snippet is defined in math mode      (optional => false)
--     auto        (boolean) : automatically expand w/o <Tab> press (optional => false)
--     priority    (integer) : snippet priority                     (optional => 100)
--     defaults    (table)   : default entries for each insert node (optional => nil)
-- nodes are auto-generated: the first node captures any stored visual input, and the rest are insert nodes
config.commands = {
    ------------------------- entering math -------------------------
    {
        expanded = '$<>$',
        trigger = 'jk',
        description = 'Inline Math',
        auto = true,
    },
    {
        command = '$<>$',
        trigger = 'kj',
        description = 'Inline Math',
        auto = true,
    },
    {
        command = '$|<>$',
        trigger = '|',
        description = 'Cardinality from Text Mode',
        auto = true,
    },
    {
        command = '$\\frac{<>}{<>}<>$',
        trigger = '//',
        description = 'Fraction from Text Mode',
        auto = true,
    },

    ----------------------------- fonts -----------------------------
    {
        command = '\\textbf{<>}',
        trigger = 'bf',
        description = 'Bold (Font)',
    },
    {
        command = '\\emph{<>}',
        trigger = 'it',
        description = 'Italicize (Font)',
    },
    {
        command = '\\texttt{<>}',
        trigger = 'tt',
        description = 'Teletype (Font)',
    },
    {
        command = '\\textsc{<>}',
        trigger = 'sc',
        description = 'Small Caps (Font)',
    },
    {
        command = '\\textsf{<>}',
        trigger = 'sf',
        description = 'Sans Serif (Font)',
    },
    {
        command = '\\textrm{<>}',
        trigger = 'rm',
        description = 'Roman (Font)',
    },

    --------------------- labels and references ---------------------
    {
        command = '\\label{<>}',
        trigger = 'lab',
        description = 'Label',
    },
    {
        command = '\\ref{<>}',
        trigger = 'ref',
        description = 'Reference',
    },

    --------------------------- sections ----------------------------
    {
        command = '\\section{<>}',
        trigger = 'sec',
        description = 'Section',
    },
    {
        command = '\\subsection{<>}',
        trigger = 'ssec',
        description = 'Subsection',
        priority = 101,
    },
    {
        command = '\\subsubsection{<>}',
        trigger = 'sssec',
        description = 'Subsection',
        priority = 102,
    },

    --------------------- expositionary arrows ----------------------
    {
        command = '\\exparrow{<>}{<>}{<>}{<>}',
        trigger = 'exparrow',
        description = 'Expositionary Arrow',
        defaults = { 'label', 'text', 'color', 'direction' },
    },
    {
        command = '\\exparrowadv{<>}{<>}{<>}{<>}{<>}',
        trigger = 'exparrowadv',
        description = 'Expositionary Arrow (Advanced)',
        defaults = { 'label', 'text', 'color', 'direction', 'height' },
    },
    {
        command = '\\exparrowdual{<>}{<>}{<>}{<>}{<>}',
        trigger = 'exparrowdual',
        description = 'Expositionary Arrow (Dual)',
        defaults = { 'label 1', 'label 2', 'text', 'color', 'direction' },
    },
    {
        command = '\\expspacing',
        trigger = 'expspacing',
        description = 'Expositionary Arrow Spacing',
    },
    {
        command = '\\expspacingadv{<>}',
        trigger = 'expspacingadv',
        description = 'Expositionary Arrow Spacing (Advanced)',
        defaults = { 'height' },
    },
}

----------------------------- math ------------------------------

config.math_commands = {
----------------------------- fonts -----------------------------
----------------------- simple modifiers ------------------------
----------------------------- sums ------------------------------
--------------------------- products ----------------------------
---------------------------- limits -----------------------------
--------------------------- integrals ---------------------------
--------------- minimum/maximum/supremum/infimum ----------------
------------------------ over/undersets -------------------------
------------------------- set-building --------------------------
--------------------------- fractions ---------------------------
--------------------- sub and superscripts ----------------------
---------------------- node for exparrows -----------------------
}

config.modifiers = {
}

config.delimiters = {
}

config.math_symbols = {
------------------------- greek letters -------------------------
---------------------------- arrows -----------------------------
-------------------------- containment --------------------------
----------------------------- dots ------------------------------
----------------------------- misc ------------------------------
}

---------------------------- special ----------------------------
config.m_by_n_objects = {
---------------------------- matrix -----------------------------
----------------------------- table -----------------------------
}

return config
